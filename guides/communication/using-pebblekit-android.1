<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>PebbleKit Android // Pebble Developers</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="description" content="How to use PebbleKit to communicate with a watchapp on Android.">
  <link rel="canonical" href="http://developer.getpebble.com/guides/communication/using-pebblekit-android/">
  <link href="//fonts.googleapis.com/css?family=Open+Sans:400italic,400,300,600,700" rel="stylesheet" type="text/css">
  <link href="//fonts.googleapis.com/css?family=Inconsolata:400,700" rel="stylesheet" type="text/css">
  <link href="/assets/favicon.png" rel="shortcut icon" type="image/vnd.microsoft.icon" id="favicon">
  <link rel="stylesheet" type="text/css" href="/assets/css/main.css">
  
  <noscript>
  <link rel="stylesheet" type="text/css" href="/assets/css/noscript.css">
  </noscript>
  
  <script type="text/javascript" >
    var _rollbarConfig = {
      accessToken: 'e1ecd52de5ba46c88e9f6f346a954c62',
      captureUncaught: true,
      payload: {
        environment: 'production'
      }
    };
    !function(a,b){function c(b){this.shimId=++h,this.notifier=null,this.parentShim=b,this.logger=function(){},a.console&&void 0===a.console.shimId&&(this.logger=a.console.log)}function d(b,c,d){a._rollbarWrappedError&&(d[4]||(d[4]=a._rollbarWrappedError),d[5]||(d[5]=a._rollbarWrappedError._rollbarContext),a._rollbarWrappedError=null),b.uncaughtError.apply(b,d),c&&c.apply(a,d)}function e(b){var d=c;return g(function(){if(this.notifier)return this.notifier[b].apply(this.notifier,arguments);var c=this,e="scope"===b;e&&(c=new d(this));var f=Array.prototype.slice.call(arguments,0),g={shim:c,method:b,args:f,ts:new Date};return a._rollbarShimQueue.push(g),e?c:void 0})}function f(a,b){if(b.hasOwnProperty&&b.hasOwnProperty("addEventListener")){var c=b.addEventListener;b.addEventListener=function(b,d,e){c.call(this,b,a.wrap(d),e)};var d=b.removeEventListener;b.removeEventListener=function(a,b,c){d.call(this,a,b&&b._wrapped?b._wrapped:b,c)}}}function g(a,b){return b=b||this.logger,function(){try{return a.apply(this,arguments)}catch(c){b("Rollbar internal error:",c)}}}var h=0;c.init=function(a,b){var e=b.globalAlias||"Rollbar";if("object"==typeof a[e])return a[e];a._rollbarShimQueue=[],a._rollbarWrappedError=null,b=b||{};var h=new c;return g(function(){if(h.configure(b),b.captureUncaught){var c=a.onerror;a.onerror=function(){var a=Array.prototype.slice.call(arguments,0);d(h,c,a)};var g,i,j="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(g=0;g<j.length;++g)i=j[g],a[i]&&a[i].prototype&&f(h,a[i].prototype)}return a[e]=h,h},h.logger)()},c.prototype.loadFull=function(a,b,c,d,e){var f=g(function(){var a=b.createElement("script"),e=b.getElementsByTagName("script")[0];a.src=d.rollbarJsUrl,a.async=!c,a.onload=h,e.parentNode.insertBefore(a,e)},this.logger),h=g(function(){var b;if(void 0===a._rollbarPayloadQueue){var c,d,f,g;for(b=new Error("rollbar.js did not load");c=a._rollbarShimQueue.shift();)for(f=c.args,g=0;g<f.length;++g)if(d=f[g],"function"==typeof d){d(b);break}}"function"==typeof e&&e(b)},this.logger);g(function(){c?f():a.addEventListener?a.addEventListener("load",f,!1):a.attachEvent("onload",f)},this.logger)()},c.prototype.wrap=function(b,c){try{var d;if(d="function"==typeof c?c:function(){return c||{}},"function"!=typeof b)return b;if(b._isWrap)return b;if(!b._wrapped){b._wrapped=function(){try{return b.apply(this,arguments)}catch(c){throw c._rollbarContext=d(),c._rollbarContext._wrappedSource=b.toString(),a._rollbarWrappedError=c,c}},b._wrapped._isWrap=!0;for(var e in b)b.hasOwnProperty(e)&&(b._wrapped[e]=b[e])}return b._wrapped}catch(f){return b}};for(var i="log,debug,info,warn,warning,error,critical,global,configure,scope,uncaughtError".split(","),j=0;j<i.length;++j)c.prototype[i[j]]=e(i[j]);var k="//d37gvrvc0wt4s1.cloudfront.net/js/v1.1/rollbar.min.js";_rollbarConfig.rollbarJsUrl=_rollbarConfig.rollbarJsUrl||k;var l=c.init(a,_rollbarConfig);l.loadFull(a,b,!1,_rollbarConfig)}(window,document);
  </script>
  <script type="text/javascript" async>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-30638158-4', 'auto');
    ga('send', 'pageview');
  </script>
  
</head>
<body class="">
  <div class="mmenu__wrapper">
    <div class="sidebar__wrapper sidebar__wrapper--sectionmenu">
  <div class="sidebar sidebar--narrow">
    <a href="/" class="sidebar__header">
      <span>pebble</span>
    </a>
    <ul class="mainmenu">
      <li class="mainmenu__item mainmenu__item--getting-started"><a href="/tutorials/"><span>Tutorials</span></a></li>
<li class="mainmenu__item mainmenu__item--sdk"><a href="/sdk/"><span>Get the SDK</span></a></li>
<li class="mainmenu__item mainmenu__item--guides active"><a href="/guides/"><span>Guides</span></a></li>
<li class="mainmenu__item mainmenu__item--docs"><a href="/docs/"><span>Documentation</span></a></li>
<li class="mainmenu__item mainmenu__item--examples"><a href="/examples/"><span>Examples</span></a></li>
<li class="mainmenu__item mainmenu__item--community"><a href="/community/"><span>Community</span></a></li>
<li class="mainmenu__item mainmenu__item--blog"><a href="/blog/"><span>Blog</span></a></li>
<li class="mainmenu__item mainmenu__item--more"><a href="/more/"><span>More</span></a></li>

    </ul>
    <div class="sidebar__legal">
      <a href="https://www.pebble.com/legal/privacy/" target="_blank">Privacy</a>
      <br>
      <a href="https://www.pebble.com/legal/cookies/" target="_blank">Cookies</a>
    </div>
    <a href="https://dev-portal.getpebble.com/" target="_blank" class="sidebar__footer">Publish</a>
  </div>
  <div class="section-menu section-menu--guides section-menu--light">
    <div class="section-menu__header">
      <h3><a href="/guides/">Guides</a></h3>
    </div>
    <ul>
      <li class="section-menu__item">
        <a href="/guides/toc/">Table of Contents</a>
      </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/app-resources/">
            
            App Resources
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/appstore-publishing/">
            
            Appstore Publishing
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/best-practices/">
            
            Best Practices
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item open">
          <a href="/guides/communication/">
            
            Communication
          </a>
          
            <ul>
            
            
            
              
                <li class="section-menu__subitem">
                  <a href="/guides/communication/advanced-communication/"><span>Advanced Communication</span></a>
                </li>
              
            
              
            
              
                <li class="section-menu__subitem">
                  <a href="/guides/communication/datalogging/"><span>Datalogging</span></a>
                </li>
              
            
              
                <li class="section-menu__subitem active">
                  <a href="/guides/communication/using-pebblekit-android/"><span>PebbleKit Android</span></a>
                </li>
              
            
              
                <li class="section-menu__subitem">
                  <a href="/guides/communication/using-pebblekit-js/"><span>PebbleKit JS</span></a>
                </li>
              
            
              
                <li class="section-menu__subitem">
                  <a href="/guides/communication/using-pebblekit-ios/"><span>PebbleKit iOS</span></a>
                </li>
              
            
              
                <li class="section-menu__subitem">
                  <a href="/guides/communication/sending-and-receiving-data/"><span>Sending and Receiving Data</span></a>
                </li>
              
            
              
                <li class="section-menu__subitem">
                  <a href="/guides/communication/using-the-sports-api/"><span>Sports API</span></a>
                </li>
              
            
            
            </ul>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/debugging/">
            
            Debugging
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/design-and-interaction/">
            
            Design and Interaction
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/events-and-services/">
            
            Events and Services
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/graphics-and-animations/">
            
            Graphics and Animations
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/migration/">
            
            Migrating Older Apps
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/pebble-packages/">
            
            Pebble Packages
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/pebble-timeline/">
            
            Pebble Timeline
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/rocky-js/">
            
            Rocky.js
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/smartstraps/">
            
            Smartstraps
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/tools-and-resources/">
            
            Tools and Resources
          </a>
          
        </li>
      
        
        
        
        <li class="section-menu__item">
          <a href="/guides/user-interfaces/">
            
            User Interfaces
          </a>
          
        </li>
      
    </ul>
  </div>
</div><!-- sidebar__wrapper -->
<div class="content content--section-menu">
  <div class="search">
  <a  href="javascript:void(0);" class="mobile-nav__hamburger js-mobile-nav-toggle"><i class="fa fa-reorder"></i></a>
  <i class="fa fa-lg fa-search search__icon"></i><input type="search" id="quicksearch" placeholder="Search Developer Site">
</div>
<div class="quicksearch" style="display: none;" id="quicksearch__results"></div>
<div id="search__blackout" style="display: none;"></div>

  <div class="container">
    
<div class="visible-m visible-s visible-xs row">
  <div class="col-xs-12">
    <div class="form__group">
      <div class="select-style no-label">
        <select class="js-toc-select">
          
            <option value="setting-up-pebblekit-android">Setting Up PebbleKit Android</option>
          
            <option value="sending-messages-from-android">Sending Messages from Android</option>
          
            <option value="receiving-messages-on-android">Receiving Messages on Android</option>
          
            <option value="other-capabilities">Other Capabilities</option>
          
        </select>
      </div>
    </div>
  </div>
</div>


<div class="row">
  <div class="col-l-8 col-m-12">
    <h1 class="pagetitle">PebbleKit Android</h1>
    
<!-- 
    
 -->
    <div class="markdown markdown--staff">
    
    <p><a href="https://github.com/pebble/pebble-android-sdk/" title="" class="">PebbleKit Android</a> is a Java
library that works with the Pebble SDK and can be embedded in any Android
application. Using the classes and methods in this library, an Android companion
app can find and exchange data with a Pebble watch.</p><p>This section assumes that the reader is familiar with basic Android development
and Android Studio as an integrated development environment. Refer to the
<a href="http://developer.android.com/sdk/index.html" title="" class="">Android Documentation</a> for more
information on installing the Android SDK.</p><p>Most PebbleKit Android methods require a <code>Context</code> parameter. An app can use
<code>getApplicationContext()</code>, which is available from any <code>Activity</code>
implementation.</p><h3 id="setting-up-pebblekit-android" class="anchor">Setting Up PebbleKit Android</h3><p>Add PebbleKit Android to an Android Studio project in the
<code>app/build.gradle</code> file:</p><div class="highlight"><pre><span class="vg">dependencies</span><span class="w"> </span><span class="p">{</span>
<span class="w">  </span><span class="vg">compile</span><span class="w"> </span><span class="c1">'com.getpebble:pebblekit:4.0.0'</span>
<span class="p">}</span>
</pre></div><h3 id="sending-messages-from-android" class="anchor">Sending Messages from Android</h3><p>Since Android apps are built separately from their companion Pebble apps, there is
no way for the build system to automatically create matching appmessage keys.
You must therefore manually specify them in <code>package.json</code>, like so:</p><div class="highlight"><pre><span class="p">{</span>
  <span class="s2">"ContactName"</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
  <span class="s2">"Age"</span><span class="o">:</span> <span class="mi">1</span>
<span class="p">}</span>
</pre></div><p>These numeric values can then be used as appmessage keys in your Android app.</p><p>Messages are constructed with the <code>PebbleDictionary</code> class and sent to a C
watchapp or watchface using the <code>PebbleKit</code> class. The first step is to create a
<code>PebbleDictionary</code> object:</p><div class="highlight"><pre><span class="c1">// Create a new dictionary</span>
<span class="n">PebbleDictionary</span> <span class="n">dict</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">PebbleDictionary</span><span class="o">();</span>
</pre></div><p>Data items are added to the 
<a href="/docs/pebblekit-android/com/getpebble/android/kit/util/PebbleDictionary" title="" class=""><code>PebbleDictionary</code></a> 
using key-value pairs with the methods made available by the object, such as
<code>addString()</code> and <code>addInt32()</code>. An example is shown below:</p><div class="highlight"><pre><span class="c1">// The key representing a contact name is being transmitted</span>
<span class="kd">final</span> <span class="kt">int</span> <span class="n">AppKeyContactName</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kd">final</span> <span class="kt">int</span> <span class="n">AppKeyAge</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>

<span class="c1">// Get data from the app</span>
<span class="kd">final</span> <span class="n">String</span> <span class="n">contactName</span> <span class="o">=</span> <span class="n">getContact</span><span class="o">();</span>
<span class="kd">final</span> <span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="n">getAge</span><span class="o">();</span>

<span class="c1">// Add data to the dictionary</span>
<span class="n">dict</span><span class="o">.</span><span class="na">addString</span><span class="o">(</span><span class="n">AppKeyContactName</span><span class="o">,</span> <span class="n">contactName</span><span class="o">);</span>
<span class="n">dict</span><span class="o">.</span><span class="na">addInt32</span><span class="o">(</span><span class="n">AppKeyAge</span><span class="o">,</span> <span class="n">age</span><span class="o">);</span>
</pre></div><p>Finally, the dictionary is sent to the C app by calling <code>sendDataToPebble()</code>
with a UUID matching that of the C app that will receive the data:</p><div class="highlight"><pre><span class="kd">final</span> <span class="n">UUID</span> <span class="n">appUuid</span> <span class="o">=</span> <span class="n">UUID</span><span class="o">.</span><span class="na">fromString</span><span class="o">(</span><span class="s">"EC7EE5C6-8DDF-4089-AA84-C3396A11CC95"</span><span class="o">);</span>

<span class="c1">// Send the dictionary</span>
<span class="n">PebbleKit</span><span class="o">.</span><span class="na">sendDataToPebble</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span> <span class="n">appUuid</span><span class="o">,</span> <span class="n">dict</span><span class="o">);</span>
</pre></div><p>Once delivered, this dictionary will be available in the C app via the
<a href="/docs/c/Foundation/AppMessage/#AppMessageInboxReceived" title="AppMessageInboxReceived" class="link--docs"><code>AppMessageInboxReceived</code></a> callback, as detailed in
<a href="/guides/communication/sending-and-receiving-data/#inbox-received"><em>Sending and Receiving Data</em></a>.</p><h3 id="receiving-messages-on-android" class="anchor">Receiving Messages on Android</h3><p>Receiving messages from Pebble in a PebbleKit Android app requires a listener to
be registered in the form of a <code>PebbleDataReceiver</code> object, which extends
<code>BroadcastReceiver</code>:</p><div class="highlight"><pre><span class="c1">// Create a new receiver to get AppMessages from the C app</span>
<span class="n">PebbleDataReceiver</span> <span class="n">dataReceiver</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">PebbleDataReceiver</span><span class="o">(</span><span class="n">appUuid</span><span class="o">)</span> <span class="o">{</span>

  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">receiveData</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="kt">int</span> <span class="n">transaction_id</span><span class="o">,</span>
                                                    <span class="n">PebbleDictionary</span> <span class="n">dict</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">// A new AppMessage was received, tell Pebble</span>
    <span class="n">PebbleKit</span><span class="o">.</span><span class="na">sendAckToPebble</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">transaction_id</span><span class="o">);</span>
  <span class="o">}</span>

<span class="o">};</span>
</pre></div>
<div class="alert alert--fg-white alert--bg-dark-red">
<p><strong>Important</strong></p><p>PebbleKit apps <strong>must</strong> manually send an acknowledgement (Ack) to Pebble to
inform it that the message was received successfully. Failure to do this will
cause timeouts.</p>
</div>
<p>Once created, this receiver should be registered in <code>onResume()</code>, overridden
from <code>Activity</code>:</p><div class="highlight"><pre><span class="nd">@Override</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onResume</span><span class="o">()</span> <span class="o">{</span>
  <span class="kd">super</span><span class="o">.</span><span class="na">onResume</span><span class="o">();</span>

  <span class="c1">// Register the receiver</span>
  <span class="n">PebbleKit</span><span class="o">.</span><span class="na">registerReceivedDataHandler</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span> <span class="n">dataReceiver</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
<blockquote>
<p>Note: To avoid getting callbacks after the <code>Activity</code> or <code>Service</code> has exited,
apps should attempt to unregister the receiver in <code>onPause()</code> with
<code>unregisterReceiver()</code>.</p></blockquote>
<p>With a receiver in place, data can be read from the provided 
<a href="/docs/pebblekit-android/com/getpebble/android/kit/util/PebbleDictionary" title="" class=""><code>PebbleDictionary</code></a>
using analogous methods such as <code>getString()</code> and <code>getInteger()</code>. Before reading
the value of a key, the app should first check that it exists using a <code>!= null</code>
check.</p><p>The example shown below shows how to read an integer from the message, in the
scenario that the watch is sending an age value to the Android companion app:</p><div class="highlight"><pre><span class="nd">@Override</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">receiveData</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="kt">int</span> <span class="n">transaction_id</span><span class="o">,</span>
                                                      <span class="n">PebbleDictionary</span> <span class="n">dict</span><span class="o">)</span> <span class="o">{</span>
  <span class="c1">// If the tuple is present...</span>
  <span class="n">Long</span> <span class="n">ageValue</span> <span class="o">=</span> <span class="n">dict</span><span class="o">.</span><span class="na">getInteger</span><span class="o">(</span><span class="n">AppKeyAge</span><span class="o">);</span>
  <span class="k">if</span><span class="o">(</span><span class="n">ageValue</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">// Read the integer value</span>
    <span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="n">ageValue</span><span class="o">.</span><span class="na">intValue</span><span class="o">();</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div><h3 id="other-capabilities" class="anchor">Other Capabilities</h3><p>In addition to sending and receiving messages, PebbleKit Android also allows
more intricate interactions with Pebble. See the
<a href="/docs/pebblekit-android/com/getpebble/android/kit/PebbleKit/" title="" class="">PebbleKit Android Documentation</a> 
for a complete list of available methods. Some examples are shown below of what
is possible:</p>
<ul>
<li><p>Checking if the watch is connected:</p><div class="highlight"><pre><span class="kt">boolean</span> <span class="n">connected</span> <span class="o">=</span> <span class="n">PebbleKit</span><span class="o">.</span><span class="na">isWatchConnected</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">());</span>
</pre></div></li>
<li><p>Registering for connection events with <code>registerPebbleConnectedReceiver()</code> and
<code>registerPebbleDisconnectedReceiver()</code>, and a suitable <code>BroadcastReceiver</code>.</p><div class="highlight"><pre><span class="n">PebbleKit</span><span class="o">.</span><span class="na">registerPebbleConnectedReceiver</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span>
                                                  <span class="k">new</span> <span class="nf">BroadcastReceiver</span><span class="o">()</span> <span class="o">{</span>

  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onReceive</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span> <span class="o">}</span>

<span class="o">});</span>
</pre></div></li>
<li><p>Registering for Ack/Nack events with <code>registerReceivedAckHandler()</code> and
<code>registerReceivedNackHandler()</code>.</p><div class="highlight"><pre><span class="n">PebbleKit</span><span class="o">.</span><span class="na">registerReceivedAckHandler</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span>
                              <span class="k">new</span> <span class="n">PebbleKit</span><span class="o">.</span><span class="na">PebbleAckReceiver</span><span class="o">(</span><span class="n">appUuid</span><span class="o">)</span> <span class="o">{</span>

  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">receiveAck</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span> <span class="o">}</span>

<span class="o">});</span>
</pre></div></li>
<li><p>Launching and killing the watchapp with <code>startAppOnPebble()</code> and
<code>closeAppOnPebble()</code>.</p><div class="highlight"><pre><span class="n">PebbleKit</span><span class="o">.</span><span class="na">startAppOnPebble</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span> <span class="n">appUuid</span><span class="o">);</span>
</pre></div></li>
</ul>

    </div>
    
    <a id="comments" class="anchor"></a>
    <div id="disqus_thread" aria-live="polite" data-post-url="https://developer.getpebble.com/guides/communication/using-pebblekit-android/">
      You need JavaScript enabled to read and post comments.
    </div>
    
    
  </div>
  
    <div class="col-m-4 hidden-s hidden-xs hidden-m">
      <div class="gray-box gray-box--fixed gray-box--scrollspy">
        
  <h3>Overview</h3>
  <ul class="toc">
    
      <li class="toc__item toc__item--level1"><a href="#setting-up-pebblekit-android">Setting Up PebbleKit Android</a></li>
    
      <li class="toc__item toc__item--level1"><a href="#sending-messages-from-android">Sending Messages from Android</a></li>
    
      <li class="toc__item toc__item--level1"><a href="#receiving-messages-on-android">Receiving Messages on Android</a></li>
    
      <li class="toc__item toc__item--level1"><a href="#other-capabilities">Other Capabilities</a></li>
    
  </ul>

        
        
      </div>
    </div>
  
</div>

  </div>
</div>

    
  </div>
  <script type="text/javascript">
    var searchPrimary = '';
  </script>
  
  <script type="text/javascript" src="/assets/js/libs-ce98da7b5eecc97f976a3cad8e665a31.js"></script>
  
  <script type="text/javascript" src="/assets/js/templates.js"></script>
  <script type="text/javascript" src="/assets/js/app.js"></script>
  <script type="text/javascript" src="/assets/js/search.js"></script>
  <script type="text/javascript" src="/assets/js/quicksearch.js"></script>
  <script type="text/javascript" src="/assets/js/disqus.js"></script>
  
</body>
</html>
