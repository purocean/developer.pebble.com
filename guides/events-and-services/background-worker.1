<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>Background Worker // Pebble Developers</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="description" content="Using the Background Worker to do work in the background, such as activity
tracking.
">
  <link rel="canonical" href="http://developer.getpebble.com/guides/events-and-services/background-worker/">
  <link href="//fonts.googleapis.com/css?family=Open+Sans:400italic,400,300,600,700" rel="stylesheet" type="text/css">
  <link href="//fonts.googleapis.com/css?family=Inconsolata:400,700" rel="stylesheet" type="text/css">
  <link href="/developer.pebble.com/assets/favicon.png" rel="shortcut icon" type="image/vnd.microsoft.icon" id="favicon">
  <link rel="stylesheet" type="text/css" href="/developer.pebble.com/assets/css/main.css">

  <noscript>
  <link rel="stylesheet" type="text/css" href="/developer.pebble.com/assets/css/noscript.css">
  </noscript>

  <script type="text/javascript" >
    var _rollbarConfig = {
      accessToken: 'e1ecd52de5ba46c88e9f6f346a954c62',
      captureUncaught: true,
      payload: {
        environment: 'production'
      }
    };
    !function(a,b){function c(b){this.shimId=++h,this.notifier=null,this.parentShim=b,this.logger=function(){},a.console&&void 0===a.console.shimId&&(this.logger=a.console.log)}function d(b,c,d){a._rollbarWrappedError&&(d[4]||(d[4]=a._rollbarWrappedError),d[5]||(d[5]=a._rollbarWrappedError._rollbarContext),a._rollbarWrappedError=null),b.uncaughtError.apply(b,d),c&&c.apply(a,d)}function e(b){var d=c;return g(function(){if(this.notifier)return this.notifier[b].apply(this.notifier,arguments);var c=this,e="scope"===b;e&&(c=new d(this));var f=Array.prototype.slice.call(arguments,0),g={shim:c,method:b,args:f,ts:new Date};return a._rollbarShimQueue.push(g),e?c:void 0})}function f(a,b){if(b.hasOwnProperty&&b.hasOwnProperty("addEventListener")){var c=b.addEventListener;b.addEventListener=function(b,d,e){c.call(this,b,a.wrap(d),e)};var d=b.removeEventListener;b.removeEventListener=function(a,b,c){d.call(this,a,b&&b._wrapped?b._wrapped:b,c)}}}function g(a,b){return b=b||this.logger,function(){try{return a.apply(this,arguments)}catch(c){b("Rollbar internal error:",c)}}}var h=0;c.init=function(a,b){var e=b.globalAlias||"Rollbar";if("object"==typeof a[e])return a[e];a._rollbarShimQueue=[],a._rollbarWrappedError=null,b=b||{};var h=new c;return g(function(){if(h.configure(b),b.captureUncaught){var c=a.onerror;a.onerror=function(){var a=Array.prototype.slice.call(arguments,0);d(h,c,a)};var g,i,j="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(g=0;g<j.length;++g)i=j[g],a[i]&&a[i].prototype&&f(h,a[i].prototype)}return a[e]=h,h},h.logger)()},c.prototype.loadFull=function(a,b,c,d,e){var f=g(function(){var a=b.createElement("script"),e=b.getElementsByTagName("script")[0];a.src=d.rollbarJsUrl,a.async=!c,a.onload=h,e.parentNode.insertBefore(a,e)},this.logger),h=g(function(){var b;if(void 0===a._rollbarPayloadQueue){var c,d,f,g;for(b=new Error("rollbar.js did not load");c=a._rollbarShimQueue.shift();)for(f=c.args,g=0;g<f.length;++g)if(d=f[g],"function"==typeof d){d(b);break}}"function"==typeof e&&e(b)},this.logger);g(function(){c?f():a.addEventListener?a.addEventListener("load",f,!1):a.attachEvent("onload",f)},this.logger)()},c.prototype.wrap=function(b,c){try{var d;if(d="function"==typeof c?c:function(){return c||{}},"function"!=typeof b)return b;if(b._isWrap)return b;if(!b._wrapped){b._wrapped=function(){try{return b.apply(this,arguments)}catch(c){throw c._rollbarContext=d(),c._rollbarContext._wrappedSource=b.toString(),a._rollbarWrappedError=c,c}},b._wrapped._isWrap=!0;for(var e in b)b.hasOwnProperty(e)&&(b._wrapped[e]=b[e])}return b._wrapped}catch(f){return b}};for(var i="log,debug,info,warn,warning,error,critical,global,configure,scope,uncaughtError".split(","),j=0;j<i.length;++j)c.prototype[i[j]]=e(i[j]);var k="//d37gvrvc0wt4s1.cloudfront.net/js/v1.1/rollbar.min.js";_rollbarConfig.rollbarJsUrl=_rollbarConfig.rollbarJsUrl||k;var l=c.init(a,_rollbarConfig);l.loadFull(a,b,!1,_rollbarConfig)}(window,document);
  </script>
  <script type="text/javascript" async>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-30638158-4', 'auto');
    ga('send', 'pageview');
  </script>

</head>
<body class="">
  <div class="mmenu__wrapper">
    <div class="sidebar__wrapper sidebar__wrapper--sectionmenu">
  <div class="sidebar sidebar--narrow">
    <a href="/" class="sidebar__header">
      <span>pebble</span>
    </a>
    <ul class="mainmenu">
      <li class="mainmenu__item mainmenu__item--getting-started"><a href="/tutorials/"><span>Tutorials</span></a></li>
<li class="mainmenu__item mainmenu__item--sdk"><a href="/sdk/"><span>Get the SDK</span></a></li>
<li class="mainmenu__item mainmenu__item--guides active"><a href="/guides/"><span>Guides</span></a></li>
<li class="mainmenu__item mainmenu__item--docs"><a href="/docs/"><span>Documentation</span></a></li>
<li class="mainmenu__item mainmenu__item--examples"><a href="/examples/"><span>Examples</span></a></li>
<li class="mainmenu__item mainmenu__item--community"><a href="/community/"><span>Community</span></a></li>
<li class="mainmenu__item mainmenu__item--blog"><a href="/blog/"><span>Blog</span></a></li>
<li class="mainmenu__item mainmenu__item--more"><a href="/more/"><span>More</span></a></li>

    </ul>
    <div class="sidebar__legal">
      <a href="https://www.pebble.com/legal/privacy/" target="_blank">Privacy</a>
      <br>
      <a href="https://www.pebble.com/legal/cookies/" target="_blank">Cookies</a>
    </div>
    <a href="https://dev-portal.getpebble.com/" target="_blank" class="sidebar__footer">Publish</a>
  </div>
  <div class="section-menu section-menu--guides section-menu--light">
    <div class="section-menu__header">
      <h3><a href="/guides/">Guides</a></h3>
    </div>
    <ul>
      <li class="section-menu__item">
        <a href="/guides/toc/">Table of Contents</a>
      </li>




        <li class="section-menu__item">
          <a href="/guides/app-resources/">

            App Resources
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/appstore-publishing/">

            Appstore Publishing
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/best-practices/">

            Best Practices
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/communication/">

            Communication
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/debugging/">

            Debugging
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/design-and-interaction/">

            Design and Interaction
          </a>

        </li>




        <li class="section-menu__item open">
          <a href="/guides/events-and-services/">

            Events and Services
          </a>

            <ul>




                <li class="section-menu__subitem">
                  <a href="/guides/events-and-services/accelerometer/"><span>Accelerometer</span></a>
                </li>



                <li class="section-menu__subitem active">
                  <a href="/guides/events-and-services/background-worker/"><span>Background Worker</span></a>
                </li>



                <li class="section-menu__subitem">
                  <a href="/guides/events-and-services/buttons/"><span>Buttons</span></a>
                </li>



                <li class="section-menu__subitem">
                  <a href="/guides/events-and-services/compass/"><span>Compass</span></a>
                </li>



                <li class="section-menu__subitem">
                  <a href="/guides/events-and-services/dictation/"><span>Dictation</span></a>
                </li>



                <li class="section-menu__subitem">
                  <a href="/guides/events-and-services/events/"><span>Event Services</span></a>
                </li>





                <li class="section-menu__subitem">
                  <a href="/guides/events-and-services/hrm/"><span>Heart Rate Monitor</span></a>
                </li>



                <li class="section-menu__subitem">
                  <a href="/guides/events-and-services/health/"><span>Pebble Health</span></a>
                </li>



                <li class="section-menu__subitem">
                  <a href="/guides/events-and-services/persistent-storage/"><span>Persistent Storage</span></a>
                </li>



                <li class="section-menu__subitem">
                  <a href="/guides/events-and-services/wakeups/"><span>Wakeups</span></a>
                </li>



            </ul>

        </li>




        <li class="section-menu__item">
          <a href="/guides/graphics-and-animations/">

            Graphics and Animations
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/migration/">

            Migrating Older Apps
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/pebble-packages/">

            Pebble Packages
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/pebble-timeline/">

            Pebble Timeline
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/rocky-js/">

            Rocky.js
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/smartstraps/">

            Smartstraps
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/tools-and-resources/">

            Tools and Resources
          </a>

        </li>




        <li class="section-menu__item">
          <a href="/guides/user-interfaces/">

            User Interfaces
          </a>

        </li>

    </ul>
  </div>
</div><!-- sidebar__wrapper -->
<div class="content content--section-menu">
  <div class="search">
  <a  href="javascript:void(0);" class="mobile-nav__hamburger js-mobile-nav-toggle"><i class="fa fa-reorder"></i></a>
  <i class="fa fa-lg fa-search search__icon"></i><input type="search" id="quicksearch" placeholder="Search Developer Site">
</div>
<div class="quicksearch" style="display: none;" id="quicksearch__results"></div>
<div id="search__blackout" style="display: none;"></div>

  <div class="container">

<div class="visible-m visible-s visible-xs row">
  <div class="col-xs-12">
    <div class="form__group">
      <div class="select-style no-label">
        <select class="js-toc-select">

            <option value="adding-a-worker">Adding a Worker</option>

            <option value="launching-the-worker">Launching the Worker</option>

            <option value="communicating-between-tasks">Communicating Between Tasks</option>

            <option value="managing-the-worker">Managing the Worker</option>

            <option value="available-apis">Available APIs</option>

        </select>
      </div>
    </div>
  </div>
</div>


<div class="row">
  <div class="col-l-8 col-m-12">
    <h1 class="pagetitle">Background Worker</h1>

<!--

    <div class="alert alert--bg-lightblue platform-choice platform-choice--large platform-choice--hidden">
  <p>
    This page contains some instructions that are different if you're using
    CloudPebble or if you're using the SDK locally on your computer.
  </p>
  <p>
    Select whether you're using CloudPebble or the SDK below to show the
    relevant instructions!
  </p>
  <div class="text-center">
    <a href="javascript:void();" class="platform-choice--link js-platform-choice" data-sdk-platform="cloudpebble">
      <img src="/developer.pebble.com/assets/images/sdk/cloud.svg">
      <h4>CloudPebble</h4>
    </a>
    <a href="javascript:void();" class="platform-choice--link js-platform-choice" data-sdk-platform="local">
      <img src="/developer.pebble.com/assets/images/sdk/sdk-box.svg">
      <h4>SDK</h4>
    </a>
  </div>
</div>
<div class="alert alert--bg-lightblue platform-choice platform-choice--small platform-choice--hidden">
  <p class="platform-specific" data-sdk-platform="cloudpebble">
    <img src="/developer.pebble.com/assets/images/sdk/cloud.svg">
    Showing instructions for CloudPebble. <a href="javascript: void();" class="js-platform-choice" data-sdk-platform="local">Not using CloudPebble?</a>
  </p>
  <p class="platform-specific" data-sdk-platform="local">
    <img src="/developer.pebble.com/assets/images/sdk/sdk-box.svg">
    Showing instructions for the SDK. <a href="javascript: void();" class="js-platform-choice" data-sdk-platform="cloudpebble">Using CloudPebble?</a>
  </p>
</div>


 -->
    <div class="markdown markdown--staff">

    <div class="alert alert--bg-lightblue platform-choice platform-choice--large platform-choice--hidden">
  <p>
    This page contains some instructions that are different if you're using
    CloudPebble or if you're using the SDK locally on your computer.
  </p>
  <p>
    Select whether you're using CloudPebble or the SDK below to show the
    relevant instructions!
  </p>
  <div class="text-center">
    <a href="javascript:void();" class="platform-choice--link js-platform-choice" data-sdk-platform="cloudpebble">
      <img src="/developer.pebble.com/assets/images/sdk/cloud.svg">
      <h4>CloudPebble</h4>
    </a>
    <a href="javascript:void();" class="platform-choice--link js-platform-choice" data-sdk-platform="local">
      <img src="/developer.pebble.com/assets/images/sdk/sdk-box.svg">
      <h4>SDK</h4>
    </a>
  </div>
</div>
<div class="alert alert--bg-lightblue platform-choice platform-choice--small platform-choice--hidden">
  <p class="platform-specific" data-sdk-platform="cloudpebble">
    <img src="/developer.pebble.com/assets/images/sdk/cloud.svg">
    Showing instructions for CloudPebble. <a href="javascript: void();" class="js-platform-choice" data-sdk-platform="local">Not using CloudPebble?</a>
  </p>
  <p class="platform-specific" data-sdk-platform="local">
    <img src="/developer.pebble.com/assets/images/sdk/sdk-box.svg">
    Showing instructions for the SDK. <a href="javascript: void();" class="js-platform-choice" data-sdk-platform="cloudpebble">Using CloudPebble?</a>
  </p>
</div>


    <p>In addition to the main foreground task that every Pebble app implements, a
second background worker task can also be created. This worker is capable of
running even when the foreground task is closed, and is useful for tasks that
must continue for long periods of time. For example, apps that log sensor data.</p><p>There are several important points to note about the capabilities of this
worker when compared to those of the foreground task:</p>
<ul>
<li><p>The worker is constrained to 10.5 kB of memory.</p></li>
<li><p>Some APIs are not available to the worker. See the
<a href="#available-apis" title="" class=""><em>Available APIs</em></a> section below for more information.</p></li>
<li><p>There can only be one background worker active at a time. In the event that a
second one attempts to launch from another watchapp, the user will be asked to
choose whether the new worker can replace the existing one.</p></li>
<li><p>The user can determine which app&#39;s worker is running by checking the
&#39;Background App&#39; section of the Settings menu. Workers can also be launched
from there.</p></li>
<li><p>The worker can launch the foreground app using <a href="/docs/c/Worker/#worker_launch_app" title="worker_launch_app" class="link--docs"><code>worker_launch_app()</code></a>. This
means that the foreground app should be prepared to be launched at any time
that the worker is running.</p></li>
</ul>

<blockquote>
<p>Note: This API should not be used to build background timers; use the
<a href="/docs/c/Foundation/Wakeup/" title="Wakeup" class="link--docs"><code>Wakeup</code></a> API instead.</p></blockquote>
<h2 id="adding-a-worker" class="anchor">Adding a Worker</h2><p class="platform-specific" data-sdk-platform="cloudpebble">The background worker&#39;s behavior is determined by code written in a
separate C file to the foreground app. Add a new source file and set the
&#39;Target&#39; field to &#39;Background Worker&#39;.</p><p class="platform-specific" data-sdk-platform="local">The background worker&#39;s behavior is determined by code written in a
separate C file to the foreground app, created in the <code>/worker_src</code> project
directory.</p>
<div class="platform-specific" data-sdk-platform="local">
<p>This project structure can also be generated using the
<a href="/guides/tools-and-resources/pebble-tool/" title="" class=""><code>pebble</code> tool</a> with the <code>--worker</code>
flag as shown below:</p><div class="highlight"><pre><span class="nv">$ </span>pebble new-project --worker project_name
</pre></div>
</div>
<p>The worker C file itself has a basic structure similar to a regular Pebble app,
but with a couple of minor changes, as shown below:</p><div class="highlight"><pre><span class="cp">#include &lt;pebble_worker.h&gt;</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">prv_init</span><span class="p">()</span> <span class="p">{</span>
  <span class="c1">// Initialize the worker here</span>
<span class="p">}</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">prv_deinit</span><span class="p">()</span> <span class="p">{</span>
  <span class="c1">// Deinitialize the worker here</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">prv_init</span><span class="p">();</span>
  <span class="n">worker_event_loop</span><span class="p">();</span>
  <span class="n">prv_deinit</span><span class="p">();</span>
<span class="p">}</span>
</pre></div><h2 id="launching-the-worker" class="anchor">Launching the Worker</h2><p>To launch the worker from the foreground app, use <a href="/docs/c/Foundation/AppWorker/#app_worker_launch" title="app_worker_launch" class="link--docs"><code>app_worker_launch()</code></a>:</p><div class="highlight"><pre><span class="c1">// Launch the background worker</span>
<span class="n">AppWorkerResult</span> <span class="n">result</span> <span class="o">=</span> <span class="n">app_worker_launch</span><span class="p">();</span>
</pre></div><p>The <a href="/docs/c/Foundation/AppWorker/#AppWorkerResult" title="AppWorkerResult" class="link--docs"><code>AppWorkerResult</code></a> returned will indicate any errors encountered as a
result of attempting to launch the worker. Possible result values include:</p>
<table><thead>
<tr>
<th>Result</th>
<th>Value</th>
<th style="text-align: left">Description</th>
</tr>
</thead><tbody>
<tr>
<td><a href="/docs/c/Foundation/AppWorker/#APP_WORKER_RESULT_SUCCESS" title="APP_WORKER_RESULT_SUCCESS" class="link--docs"><code>APP_WORKER_RESULT_SUCCESS</code></a></td>
<td><code>0</code></td>
<td style="text-align: left">The worker launch was successful, but may not start running immediately. Use <a href="/docs/c/Foundation/AppWorker/#app_worker_is_running" title="app_worker_is_running" class="link--docs"><code>app_worker_is_running()</code></a> to determine when the worker has started running.</td>
</tr>
<tr>
<td><a href="/docs/c/Foundation/AppWorker/#APP_WORKER_RESULT_NO_WORKER" title="APP_WORKER_RESULT_NO_WORKER" class="link--docs"><code>APP_WORKER_RESULT_NO_WORKER</code></a></td>
<td><code>1</code></td>
<td style="text-align: left">No worker found for the current app.</td>
</tr>
<tr>
<td><a href="/docs/c/Foundation/AppWorker/#APP_WORKER_RESULT_ALREADY_RUNNING" title="APP_WORKER_RESULT_ALREADY_RUNNING" class="link--docs"><code>APP_WORKER_RESULT_ALREADY_RUNNING</code></a></td>
<td><code>4</code></td>
<td style="text-align: left">The worker is already running.</td>
</tr>
<tr>
<td><a href="/docs/c/Foundation/AppWorker/#APP_WORKER_RESULT_ASKING_CONFIRMATION" title="APP_WORKER_RESULT_ASKING_CONFIRMATION" class="link--docs"><code>APP_WORKER_RESULT_ASKING_CONFIRMATION</code></a></td>
<td><code>5</code></td>
<td style="text-align: left">The user will be asked for confirmation. To determine whether the worker was given permission to launch, use <a href="/docs/c/Foundation/AppWorker/#app_worker_is_running" title="app_worker_is_running" class="link--docs"><code>app_worker_is_running()</code></a> for a short period after receiving this result.</td>
</tr>
</tbody></table>
<h2 id="communicating-between-tasks" class="anchor">Communicating Between Tasks</h2><p>There are three methods of passing data between the foreground and background
worker tasks:</p>
<ul>
<li><p>Save the data using the <a href="/docs/c/Foundation/Storage/" title="Storage" class="link--docs"><code>Storage</code></a> API, then read it in the other task.</p></li>
<li><p>Send the data to a companion phone app using the <a href="/docs/c/Foundation/DataLogging/" title="DataLogging" class="link--docs"><code>DataLogging</code></a> API. Details
on how to do this are available in <a href="/guides/communication/datalogging/"><em>Datalogging</em></a>.</p></li>
<li><p>Pass the data directly while the other task is running, using an
<a href="/docs/c/Foundation/AppWorker/#AppWorkerMessage" title="AppWorkerMessage" class="link--docs"><code>AppWorkerMessage</code></a>. These messages can be sent bi-directionally by creating
an <code>AppWorkerMessageHandler</code> in each task. The handler will fire in both the
foreground and the background tasks, so you must identify the source
of the message using the <code>type</code> parameter. </p><div class="highlight"><pre><span class="c1">// Used to identify the source of a message</span>
<span class="cp">#define SOURCE_FOREGROUND 0</span>
<span class="cp">#define SOURCE_BACKGROUND 1</span>
</pre></div><p><strong>Foreground App</strong></p><div class="highlight"><pre><span class="k">static</span> <span class="kt">int</span> <span class="n">s_some_value</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="k">static</span> <span class="kt">int</span> <span class="n">s_another_value</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">worker_message_handler</span><span class="p">(</span><span class="kt">uint16_t</span> <span class="n">type</span><span class="p">,</span>
                                    <span class="n">AppWorkerMessage</span> <span class="o">*</span><span class="n">message</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span><span class="p">(</span><span class="n">type</span> <span class="o">==</span> <span class="n">SOURCE_BACKGROUND</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// Get the data, only if it was sent from the background</span>
    <span class="n">s_some_value</span> <span class="o">=</span> <span class="n">message</span><span class="o">-&gt;</span><span class="n">data0</span><span class="p">;</span>
    <span class="n">s_another_value</span> <span class="o">=</span> <span class="n">message</span><span class="o">-&gt;</span><span class="n">data1</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Subscribe to get AppWorkerMessages</span>
<span class="n">app_worker_message_subscribe</span><span class="p">(</span><span class="n">worker_message_handler</span><span class="p">);</span>

<span class="c1">// Construct a message to send</span>
<span class="n">AppWorkerMessage</span> <span class="n">message</span> <span class="o">=</span> <span class="p">{</span>
  <span class="p">.</span><span class="n">data0</span> <span class="o">=</span> <span class="n">s_some_value</span><span class="p">,</span>
  <span class="p">.</span><span class="n">data1</span> <span class="o">=</span> <span class="n">s_another_value</span>
<span class="p">};</span>

<span class="c1">// Send the data to the background app</span>
<span class="n">app_worker_send_message</span><span class="p">(</span><span class="n">SOURCE_FOREGROUND</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">message</span><span class="p">);</span>
</pre></div><p><strong>Worker</strong></p><div class="highlight"><pre><span class="k">static</span> <span class="kt">int</span> <span class="n">s_some_value</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
<span class="k">static</span> <span class="kt">int</span> <span class="n">s_another_value</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>

<span class="c1">// Construct a message to send</span>
<span class="n">AppWorkerMessage</span> <span class="n">message</span> <span class="o">=</span> <span class="p">{</span>
  <span class="p">.</span><span class="n">data0</span> <span class="o">=</span> <span class="n">s_some_value</span><span class="p">,</span>
  <span class="p">.</span><span class="n">data1</span> <span class="o">=</span> <span class="n">s_another_value</span>
<span class="p">};</span>

<span class="k">static</span> <span class="kt">void</span> <span class="nf">worker_message_handler</span><span class="p">(</span><span class="kt">uint16_t</span> <span class="n">type</span><span class="p">,</span>
                                    <span class="n">AppWorkerMessage</span> <span class="o">*</span><span class="n">message</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span><span class="p">(</span><span class="n">type</span> <span class="o">==</span> <span class="n">SOURCE_FOREGROUND</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// Get the data, if it was sent from the foreground</span>
    <span class="n">s_some_value</span> <span class="o">=</span> <span class="n">message</span><span class="o">-&gt;</span><span class="n">data0</span><span class="p">;</span>
    <span class="n">s_another_value</span> <span class="o">=</span> <span class="n">message</span><span class="o">-&gt;</span><span class="n">data1</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Subscribe to get AppWorkerMessages</span>
<span class="n">app_worker_message_subscribe</span><span class="p">(</span><span class="n">worker_message_handler</span><span class="p">);</span>

<span class="c1">// Send the data to the foreground app</span>
<span class="n">app_worker_send_message</span><span class="p">(</span><span class="n">SOURCE_BACKGROUND</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">message</span><span class="p">);</span>
</pre></div></li>
</ul>
<h2 id="managing-the-worker" class="anchor">Managing the Worker</h2><p>The current running state of the background worker can be determined using the
<a href="/docs/c/Foundation/AppWorker/#app_worker_is_running" title="app_worker_is_running" class="link--docs"><code>app_worker_is_running()</code></a> function:</p><div class="highlight"><pre><span class="c1">// Check to see if the worker is currently active</span>
<span class="kt">bool</span> <span class="n">running</span> <span class="o">=</span> <span class="n">app_worker_is_running</span><span class="p">();</span>
</pre></div><p>The user can tell whether the worker is running by checking the system
&#39;Background App&#39; settings. Any installed workers with be listed there.</p><p>The worker can be stopped using <a href="/docs/c/Foundation/AppWorker/#app_worker_kill" title="app_worker_kill" class="link--docs"><code>app_worker_kill()</code></a>:</p><div class="highlight"><pre><span class="c1">// Stop the background worker</span>
<span class="n">AppWorkerResult</span> <span class="n">result</span> <span class="o">=</span> <span class="n">app_worker_kill</span><span class="p">();</span>
</pre></div><p>Possible <code>result</code> values when attempting to kill the worker are as follows:</p>
<table><thead>
<tr>
<th>Result</th>
<th>Value</th>
<th style="text-align: left">Description</th>
</tr>
</thead><tbody>
<tr>
<td><a href="/docs/c/Foundation/AppWorker/#APP_WORKER_RESULT_SUCCESS" title="APP_WORKER_RESULT_SUCCESS" class="link--docs"><code>APP_WORKER_RESULT_SUCCESS</code></a></td>
<td><code>0</code></td>
<td style="text-align: left">The worker launch was killed successfully.</td>
</tr>
<tr>
<td><a href="/docs/c/Foundation/AppWorker/#APP_WORKER_RESULT_DIFFERENT_APP" title="APP_WORKER_RESULT_DIFFERENT_APP" class="link--docs"><code>APP_WORKER_RESULT_DIFFERENT_APP</code></a></td>
<td><code>2</code></td>
<td style="text-align: left">A worker from a different app is running, and cannot be killed by this app.</td>
</tr>
<tr>
<td><a href="/docs/c/Foundation/AppWorker/#APP_WORKER_RESULT_NOT_RUNNING" title="APP_WORKER_RESULT_NOT_RUNNING" class="link--docs"><code>APP_WORKER_RESULT_NOT_RUNNING</code></a></td>
<td><code>3</code></td>
<td style="text-align: left">The worker is not currently running.</td>
</tr>
</tbody></table>
<h2 id="available-apis" class="anchor">Available APIs</h2><p>Background workers do not have access to the UI APIs. They also cannot use the
<a href="/docs/c/Foundation/AppMessage/" title="AppMessage" class="link--docs"><code>AppMessage</code></a> API or load resources. Most other APIs are available including
(but not limited to) <a href="/docs/c/Foundation/Event_Service/AccelerometerService/" title="AccelerometerService" class="link--docs"><code>AccelerometerService</code></a>, <a href="/docs/c/Foundation/Event_Service/CompassService/" title="CompassService" class="link--docs"><code>CompassService</code></a>,
<a href="/docs/c/Foundation/DataLogging/" title="DataLogging" class="link--docs"><code>DataLogging</code></a>, <a href="/docs/c/Foundation/Event_Service/HealthService/" title="HealthService" class="link--docs"><code>HealthService</code></a>, <a href="/docs/c/Foundation/Event_Service/ConnectionService/" title="ConnectionService" class="link--docs"><code>ConnectionService</code></a>,
<a href="/docs/c/Foundation/Event_Service/BatteryStateService/" title="BatteryStateService" class="link--docs"><code>BatteryStateService</code></a>, <a href="/docs/c/Foundation/Event_Service/TickTimerService/" title="TickTimerService" class="link--docs"><code>TickTimerService</code></a> and <a href="/docs/c/Foundation/Storage/" title="Storage" class="link--docs"><code>Storage</code></a>.</p><p class="platform-specific" data-sdk-platform="local">The compiler will throw an error if the developer attempts to use an API
unsupported by the worker. For a definitive list of available APIs, check
<code>pebble_worker.h</code> in the SDK bundle for the presence of the desired API.</p><p class="platform-specific" data-sdk-platform="cloudpebble">CloudPebble users will be notified by the editor and compiler if they
attempt to use an unavailable API.</p>
    </div>

    <a id="comments" class="anchor"></a>
    <div id="disqus_thread" aria-live="polite" data-post-url="https://developer.getpebble.com/guides/events-and-services/background-worker/">
      You need JavaScript enabled to read and post comments.
    </div>


  </div>

    <div class="col-m-4 hidden-s hidden-xs hidden-m">
      <div class="gray-box gray-box--fixed gray-box--scrollspy">

  <h3>Overview</h3>
  <ul class="toc">

      <li class="toc__item toc__item--level1"><a href="#adding-a-worker">Adding a Worker</a></li>

      <li class="toc__item toc__item--level1"><a href="#launching-the-worker">Launching the Worker</a></li>

      <li class="toc__item toc__item--level1"><a href="#communicating-between-tasks">Communicating Between Tasks</a></li>

      <li class="toc__item toc__item--level1"><a href="#managing-the-worker">Managing the Worker</a></li>

      <li class="toc__item toc__item--level1"><a href="#available-apis">Available APIs</a></li>

  </ul>


          <h3>Related SDK Docs</h3>
          <ul>

            <li><a href="/docs/c/Worker/">Worker</a></li>

          </ul>


          <h3>Examples</h3>
          <ul>

            <li><a href="https://github.com/pebble-examples/feature-background-counter" target="_blank">Background Counter</a></li>

            <li><a href="https://github.com/pebble-examples/feature-worker-message" target="_blank">Background Worker Communication</a></li>

          </ul>

      </div>
    </div>

</div>

  </div>
</div>


  </div>
  <script type="text/javascript">
    var searchPrimary = '';
  </script>

  <script type="text/javascript" src="/developer.pebble.com/assets/js/libs-ce98da7b5eecc97f976a3cad8e665a31.js"></script>

  <script type="text/javascript" src="/developer.pebble.com/assets/js/templates.js"></script>
  <script type="text/javascript" src="/developer.pebble.com/assets/js/app.js"></script>
  <script type="text/javascript" src="/developer.pebble.com/assets/js/search.js"></script>
  <script type="text/javascript" src="/developer.pebble.com/assets/js/quicksearch.js"></script>
  <script type="text/javascript" src="/developer.pebble.com/assets/js/disqus.js"></script>

</body>
</html>
